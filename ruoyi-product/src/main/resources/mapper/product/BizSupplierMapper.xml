<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.product.mapper.BizSupplierMapper">
    
    <resultMap type="BizSupplier" id="BizSupplierResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="contact"    column="contact"    />
        <result property="phone"    column="phone"    />
        <result property="email"    column="email"    />
        <result property="address"    column="address"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBizSupplierVo">
        select id, name, contact, phone, email, address, create_by, create_time, update_by, update_time from biz_supplier
    </sql>

    <select id="selectBizSupplierList" parameterType="BizSupplier" resultMap="BizSupplierResult">
        <include refid="selectBizSupplierVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
        </where>
    </select>
    
    <select id="selectBizSupplierById" parameterType="Long" resultMap="BizSupplierResult">
        <include refid="selectBizSupplierVo"/>
        where id = #{id}
    </select>

    <insert id="insertBizSupplier" parameterType="BizSupplier" useGeneratedKeys="true" keyProperty="id">
        insert into biz_supplier
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="contact != null">contact,</if>
            <if test="phone != null">phone,</if>
            <if test="email != null">email,</if>
            <if test="address != null">address,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="contact != null">#{contact},</if>
            <if test="phone != null">#{phone},</if>
            <if test="email != null">#{email},</if>
            <if test="address != null">#{address},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBizSupplier" parameterType="BizSupplier">
        update biz_supplier
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="contact != null">contact = #{contact},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="address != null">address = #{address},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBizSupplierById" parameterType="Long">
        delete from biz_supplier where id = #{id}
    </delete>

    <delete id="deleteBizSupplierByIds" parameterType="String">
        delete from biz_supplier where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>